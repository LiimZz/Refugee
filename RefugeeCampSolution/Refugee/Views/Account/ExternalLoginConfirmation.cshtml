@model Refugee.Models.ExternalLoginConfirmationViewModel

<div class="become">
    <div class="container">
        <div class="row">
            <div class="col-sm-8 col-xs-12">
    <h2>
        @{
            ViewBag.Title = "Sign up";
        } <span>@ViewBag.Title</span>
    </h2>
    <h3>Associate your <span>@ViewBag.LoginProvider</span> account.</h3>

    @using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <p class="text-info">
            You've successfully authenticated with <strong>@ViewBag.LoginProvider</strong>.
            Please enter a user name for this site below and click the Register button to finish
            logging in.
        </p>
                        <div class="form-group">

                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.LabelFor(m => m.Email)
                                </div>
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.LabelFor(m => m.UserName)
                                </div>
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.LabelFor(m => m.Password)
                                </div>
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-6 col-sm-6 col-xs-12">
                                    @Html.LabelFor(m => m.ConfirmPassword)
                                </div>
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
                                </div>
                            </div>

                        </div>

                        <div class="form-group">
                            <div class="buttons">
                                <input type="submit" class="btn btn-success" value="Register" />
                            </div>
                        </div>
                        }
                        @section Scripts {
                            @Scripts.Render("~/bundles/jqueryval")
                        }
                    </div>
                </div>
    </div>
</div>